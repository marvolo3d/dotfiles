#!/bin/bash

_yellow1="\\033[38;5;214m"
_purp="\\033[38;5;98m"
_gray="\\033[38;5;240m"
_lightgray="\\033[38;5;244m"
_orange="\\033[38;5;208m"
_blue="\\033[38;5;76m"
_blue2="\\033[38;5;154m"

function FTPmount {
    curlftpfs ftp://tomnorman.ca /mnt/tomnorman_ca/goodies -o user=goodies@tomnorman.ca:Fideliox1!
    curlftpfs ftp://tomnorman.ca /mnt/tomnorman_ca/the_abyss -o user=marvolo@tomnorman.ca:Fideliox1!
    curlftpfs ftp://tomnorman.ca /mnt/tomnorman_ca/public -o user=public@tomnorman.ca:Fideliox1!
}

function pset {
	export PROJECT=$(pwd)
}

function cdp {
  pname="$1"
  cd "${HOME}/projects/${pname}"
}

function freespace {
    sudo btrfs fi usage $1
}

function x264_encode {
    filename="$1"
    filename="${filename%.*}"

    if [ -z "$2" ]; then
        framerate=24
    else
        framerate=$2
    fi

    echo -e "encoding ${filename} at ${framerate} fps"

    # ffmpeg -i "$1" -r $framerate -c:v libx264 -preset slow -crf 18 -pix_fmt yuv420p "${filename}_x264.mp4"
    ffmpeg -i "$1" -r $framerate -c:v libx264 -vf "scale=trunc(iw/2)*2:trunc(ih/2)*2" -preset veryslow -crf 18 -pix_fmt yuv420p "${filename}_x264.mp4"

    bell
}

function transfer {
    transfer_url=$(curl -T ${1} "https://transfer.sh/"$(basename ${1}))
    echo -n $transfer_url | xclip -selection clipboard #copy link to clipboard
    echo -e "\nupload complete: $_blue2$transfer_url$_lightgray\n"
    notify-send "$transfer_url" -t 2000 #notify

    bell
}

function tn_transfer {
    # mount site if not already
    if [ -z "$(mount | grep tomnorman_ca/the_abyss)" ]; then
        FTPmount
    fi

    if [ "$1" == "-r" ]; then
        random=1
        infile="$2"
    elif [ -z "$2" ]; then
        random=0
        infile="$1"
    fi

    filename="$(basename $infile)"
    targetdir="/mnt/tomnorman_ca/the_abyss/"

    if [ $random == 1 ]; then
        pass=0

        while [ $pass -lt 1 ]
        do
            extension="${filename##*.}"
            # noun="$(shuf -n1 /usr/share/wordnet-3.0/dict/noun.exc)"
            noun="$(cat ~/Documents/animals | shuf -n1 )"

            initial="$(echo $noun | head -c 1)" # get an adjective that starts with the same first letter
            # adj="$(cat /usr/share/wordnet-3.0/dict/adj.exc | grep "^$initial" | shuf -n1 | awk '{print $2}')"
            adj="$(cat ~/Documents/adjectives | grep -i "^$initial" | shuf -n1)"

            # nounrand[0]="$(echo $noun | awk '{print $1}')"
            # nounrand[1]="$(echo $noun | awk '{print $2}')"
            # rand=$[ $RANDOM % 2 ]
            # noun="${nounrand[$rand]}"

            filename="${adj}${noun^}.${extension}"

            if [ ! -f "$targetdir$filename" ]; then
                pass=1
            fi
        done

    fi

    cp "$infile" $targetdir/$filename

    chmod 655 "$targetdir/$filename"

    result="http://tomnorman.ca/the_abyss/${filename}"

    echo $result

    echo -n $result | xclip -selection clipboard #copy link to clipboard

    bell

    notify-send "uploaded as fuck $result" -t 2000
}

function vdenoise_anim {
    vdenoise -inputFile="${1}" -useGpu=2 -abortOnOpenCLError=1
    bell
}

function bell {
    mplayer "/usr/share/sounds/freedesktop/stereo/bell.oga" &> /dev/null
}

function update_firefox {
    wget -qO - "https://download.mozilla.org/?product=firefox-latest&os=linux64&lang=en-US" | sudo tar xjf - -C /opt

    echo "firefox updated succesfully"

    bell
}

function colors {
    color=16;

    while [ $color -lt 245 ]; do
        echo -e "$color: \\033[38;5;${color}mhello\\033[48;5;${color}mworld\\033[0m"
        ((color++));
    done
}

function disable_caps {
    setxkbmap -option caps:none
}

function pad_files {
    num=`expr match "$1" '[^0-9]*\([0-9]\+\).*'`
    paddednum=`printf "%03d" $num`
    echo ${1/$num/$paddednum}
}

function sound_fix {
    killall pulseaudio
    killall spotify
    killall plasmashell

    xrandr --output DP-2 --off
    xrandr --output DP-2 --auto
    xrandr --output DP-2 --left-of HDMI-0

    kstart plasmashell > /dev/null 2>&1

    sleep 3

    spotify > /dev/null 2>&1 &
}

function vray_check {
    echo
    echo

    echo "vray render slave dr check"

    macpro="$(vraydr_check -host=macpro -port=20207 2>&1)"
    xeon="$(vraydr_check -host=xeon-ws -port=20207 2>&1)"

    if [ -z "$(echo $macpro | grep -i ready)" ]; then
        macpro_result="\e[38;5;160mfailed: \e[38;5;244m$macpro"
    else
        macpro_result="\e[38;5;76mready!\e[38;5;244m"
    fi

    if [ -z "$(echo $xeon | grep -i ready)" ]; then
        xeon_result="\e[38;5;160mfailed: \e[38;5;244m$xeon"
    else
        xeon_result="\e[38;5;76mready!\e[38;5;244m"
    fi

    echo -e "\e[38;5;208mmacpro\e[38;5;244m  | $macpro_result "
    echo -e "\e[38;5;208mxeon-ws\e[38;5;244m | $xeon_result "
    echo
    echo
}

function startNukeRenderServer {
    /opt/nuke/python /opt/nuke/pythonextensions/site-packages/foundry/frameserver/nuke/runframeserver.py --numworkers=2 --nukeworkerthreads=24 --nukeworkermemory=16384 --workerconnecturl=tcp://titan-x99:5560 --nukepath/opt/nuke/Nuke11.0
}

# -------
# ALIASES
# -------

alias lh="ls -lh"
alias lm="ls -lh --sort=t -r"

alias gpu="konsole -e watch -n 1 nvidia-smi &> /dev/null"

alias vrlctl="/usr/ChaosGroup/VRLService/OLS/vrlctl" #made alias because appending to PATH wasn't working

alias fabric="/opt/fabric/canvas.sh"
alias rv="/opt/rv/bin/rv"
alias mari="/opt/mari/mari &"
alias nuke="/opt/nuke/Nuke11.0 -b"
alias maya2017="/usr/autodesk/maya2017/bin/maya2017 -nosplash &"
alias maya="/usr/autodesk/maya2018/bin/maya2018 -nosplash &"
alias zbrush="playonlinux --run \"ZBrush64\" &"
alias npm="/usr/lib/inkdrop/resources/app/ipm/bin/npm"

alias cdz="cd $HOME/.PlayOnLinux/wineprefix/zbrush/drive_c"
alias cdx="cd /mnt/xeon_home"

alias restartX="sudo systemctl restart sddm"

alias removeExtensions="for x in *;do mv $x ${x%*.*};done"


# PROMPT COLORING. https://cwgoover.github.io/2016/07/26/linux-prompt/

# colors definied at top

export PS1="$_yellow1\u$_orange@\h $_purp\W $_gray$ $_lightgray"
